% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pattern_exts.R
\name{pattern_exts}
\alias{pattern_exts}
\title{Extract GNU Make pattern rule file extensions}
\usage{
pattern_exts(x = "~/lib/r-rules.mk", rm.beamer.templates = FALSE)
}
\arguments{
\item{x}{file name specified as a character string. Default:
\dQuote{~/lib/r-rules.mk}}

\item{rm.beamer.templates}{(logical) as to whether or not to remove
references to beamer templates. Default: FALSE}
}
\value{
Object of class \code{gnu_make_exts} which is a list of
  file name extensions to be used in creating working
  Makefiles. The components are \code{dep_targs}: a named list
  with one or more possible target file extensions with component
  names the the extension of the first dependency file name,
  \code{variables}: variables set in Make rules file \code{x} used
  in either targets or dependency file extensions and
  \code{extras} containing various material extracted from the
  file \code{x}.
}
\description{
\code{pattern_exts} extracts file name extensions from GNU Make pattern rules file
}
\details{
Target and dependency file name extensions are extracted from the
specified GNU Make rules file for use with
\code{\link{create_makefile}}. While this function may be employed
to extract file extensions, it's main purpose is to enable all
specified pattern rules to be employed with the
\code{\link{gnumaker}} package and so update these relationships
when new rules are added.
}
\examples{
## Extract pattern rule file extensions from 'r-rules.mk'
testfile <- system.file("make", "r-rules.mk", package = "gnumaker")
file_exts <- pattern_exts(testfile)
file_exts$dep_targs

}
\seealso{
\code{\link{create_makefile}}
}
